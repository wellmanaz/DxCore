##########################################################################
#                                                                        #
#  #######              #####                                            #
#  ##    ##            ##```                                             #
#  ##     ## ##   ##   ##      ###  ####  ####     ##      ##      ###   #
#  ##     ##  ## ##    ##     #   # #   # #       ###     #       #  ##  #
#  ##     ##   ###     ##     #   # ####  ###      ##     ###     # # #  #
#  ##    ##   ## ##    ##___  #   # # #   #        ##  ## #  # ## ##  #  #
#  #######   ##   ##    #####  ###  #  #  ####    #### ##  ##  ##  ###   #
#________________________________________________________________________#
#                                                                        #
#  Copyright Spence Konde and other contributors 2020-2021               #
#  Based on megaTinyCore which in turn is based on official Arduino core #
#  Varying portions of different files in this core can be traced back   #
#  to the official core. In any event, it's all free software, under the #
#  (LGPL v2.1) see LICENSE.md and License section of README.md           #
#________________________________________________________________________#
#                                                                        #
#  Now reformatted for easy navigation with text editing tools which     #
#  have the zoomed out view that you can scroll through.                 #
#  The board section headings have a triangle along the right edge       #
#  if they are a non-bootloader definition.                              #
#________________________________________________________________________#
#                                                                        #
#                   ####   ###   ###  ####  ####   ###                   #
#                   #   # #   # #   # #   # #   # #                      #
#                   ####  #   # ##### ####  #   #  ###                   #
#                   #   # #   # #   # #  #  #   #     #                  #
#                   ####   ###  #   # #   # ####   ###                   #
#________________________________________________________________________#
#                                                                        #
# Names listed at the top so they can be kept in consistent format.      #
# Experience has shown that they end up drifting apart in style if       #
# they aren't all on the same screen                                     #
#                                                                        #
# DA128 shipped Q1 2020. DA64 and DA32 shipped Q3/4 2020 (Q3 DA32's did  #
# not work correctly). First sign in radical changes to branding.        #
# DB128 shipped Q2 2020,  32DB shipped Q4 2020. First AVR with on-chip   #
#     OPAMPs.                                                            #
# DD (64k in high pincounts, 16/32 in low ones) shipped in Q2 2022.      #
#     By year's end, all the expected parts were out in at least one     #
#     package, but DIP28 and QFN28 are missing for the small flash parts #
#     as if QFN20, then they are missing for those of the smaller ones   #
#     and QFN20 is missing for 64k (but I don't think it is planned      #
#     Based on the results of my filing the epoxy off the top of ).      #
# EA (first fullsize parts w/diff ADC w/PGA) Shipping march 2023, but    #
#     no ETA on QFN/TQFP 48/32/28 without buying a whole tray.           #
# DU (Dx with native USB) - Yes, you read that right. The 32u4 was looin #
#     pretty damned long in the tooth. It is coming. When? Well, it's    #
#     next in the pipeline after the EA's, and I think they recognize    #
#     how badly the AVR product line needs a native USB product to keep  #
#     people who need it from wandering out of the ecosystem and finding #
#     some other family of parts they like better. The DU's themselves   #
#     are rather less than inspiring. Much has been sacrificed upon the  #
#     altar of USB - 2 pincounts lost a TCB, their TCD was likely        #
#     repurposed to generate that 48 MHz reference clock needed for USB  #
#     2.0 standard. And MVIO went to handling level shifting to 3.3v for #
#     USB According to original product brief they can tune from the USB #
#     signals and achieve usb without a crystal if desired or they can   #
#     use a crystal like any decent person would.                        #
# EB (2 novel timers and little else, beyond low pincounts. This is a    #
#     possible tiny-killer) and not available yet. Likely (hopefully,    #
#     with only one UART!) aimed at a low price point.  It will have the #
#     fancy new ADC - but they can hit a low price range with that       #
#     easily enough, they did so on tiny 2-series - heck, they did it    #
#     with a second UART on a tiny...                                    #
##########################################################################


##########################################################################
#                                                                        #
#             ###  #   # ####  #   # #### #   # #   #  ###               #
#            #     #   # #   # ## ## #    ##  # #   # #                  #
#             ###  #   # ####  # # # ###  # # # #   #  ###               #
#                # #   # #   # #   # #    #  ## #   #     #              #
#             ###   ###  ####  #   # #### #   #  ###   ###               #
#________________________________________________________________________#
# The *opti menus are for Optiboot board definitions - We name them
# differently when the option takes on different meaning for a bootloaded
# board. Eg - UPDI can set fuses, so any fuse that can't brick the chip is written
# And we can assume all fuses have the the values that the user selected.
# But if Optiboot is in use, anything that requires changing a fuse requires burnbootloader
#_________________________________________________________________________

menu.chip=Chip
menu.board=Board/version
menu.clock=Clock Speed
menu.millis=millis()/micros() timer
menu.bodvoltage=BOD level if enabled (Bootload burn req'd)
menu.bodmode=BOD Mode Active/Sleeping (Bootload burn req'd)
menu.WDTtimeout=WDT Timeout (Bootload burn req'd)
menu.WDTwindow=WDT "window" (Bootload burn req'd)
menu.eesave=Save EEPROM
menu.eesavedd=Save EEPROM (Bootload burn req'd)
menu.resetpin=Reset pin function (Bootload burn req'd)
menu.resetupdipins=Reset and UPDI (Bootload burn req'd)
menu.resetupdipinsopti=Reset and UPDI (Bootload burn req'd)
menu.startuptime=Startup Time
menu.startuptimeopti=Startup Time (Bootload burn req'd)
menu.bootloaderusart=Bootloader Serial Port (Bootload burn req'd)
menu.bootloaderusartdd=Bootloader Serial Port (Bootload burn req'd)
menu.entrycond=Bootloader Entry Condition (Bootload burn req'd)
menu.appspm=Write to flash from app
menu.mvio=MultiVoltage I/O (MVIO)
menu.mvioopti=MultiVoltage I/O (MVIO) (Bootload burn req'd)
menu.attach=attachInterrupt() Version
menu.printf=printf()
menu.wiremode=Wire (Wire.h/I2C) Library mode
menu.flmap=How to set FLMAP: (64k+ parts only)
menu.bootloader-class=Bootloader type (installed by burn + must match 2 upload)

##########################################################################
#                                                                        #
###              ####    ###    ###   ####   ####    ###               ###
#####            #   #  #   #  #   #  #   #  #   #  #                #####
#######          ####   #   #  #####  ####   #   #   ###           #######
#####            #   #  #   #  #   #  #  #   #   #      #            #####
###              ####    ###   #   #  #   #  ####    ###               ###
#________________________________________________________________________#
##########################################################################
# Names listed at the top so they can be kept in consistent format       #
# Only EA boards without optiboot sketched in - since we know like       #
# nothing about implementation. EB is commented out, but not sketched in #
# because there is no need to do that prior to the DA release.           #
#_________________________________________________________________________

avrda.name=AVR DA-series (no bootloader)
avrdanano.name=Curiosity Nano AVR DA (no bootloader)

##########################################################################
#                                                                        #
###                 ###  #     # ####      ####   ###                  ###
#####              #   # #     # #   #     #   # #   #               #####
#######            #####  #   #  ####  ### #   # #####             #######
#####              #   #   # #   # #       #   # #   #               #####
###                #   #    #    #  #      ####  #   #                 ###
#________________________________________________________________________#
#                                        #
# Parameters and defaults for DA parts   #
#________________________________________#
avrda.upload.tool=avrdude
avrda.upload.prog_interlock=
avrda.build.board=avrda
avrda.build.core=dxcore
avrda.upload.maximum_size=0
avrda.upload.maximum_data_size=0
# The maximum size and data size attributes are overridden by the selected chip. If you are avoiding specifying that somehow, there is no hope of anything working, so don't do that.
# Each top-level entry supports at least a dozen parts with varying memory constraints.
avrda.build.f_cpu={build.speed}000000L
avrda.build.text_section_start=.text=0x0
avrda.build.extra_flags= {bootloader.appspm}
avrda.build.export_merged_output=false
avrda.build.printf=
avrda.build.flmapopts=
avrda.build.attachmode=-DCORE_ATTACH_ALL

#----------------------------------------#
# Bootloading parameters and fuses       #
#________________________________________#
avrda.bootloader.tool=avrdude
avrda.bootloader.WDTCFG=0b{bootloader.wdtwindowbits}{bootloader.wdttimeoutbits}
avrda.bootloader.wdtwindowbits=0000
avrda.bootloader.wdttimeotbits=0000
avrda.bootloader.BODCFG=0b{bootloader.bodlevbits}{bootloader.bodmodebits}
avrda.bootloader.SYSCFG0=0b1100{bootloader.resetpinbits}0{bootloader.eesavebit}
avrda.bootloader.CODESIZE=0x00
avrda.bootloader.BOOTSIZE=0x01
# Note that BOOTSIZE is overridden by App SPM menu's default option - this way is just less verbose.
avrda.bootloader.avrdudestring=
avrda.bootloader.pymcuprogstring=-aerase

#----------------------------------------#
# Exported hex/lst/map names will        #
# indicate selected options. These       #
# are only to do that, nothing else      #
#________________________________________#
avrda.build.mcupostfix=
avrda.build.printfabr=
avrda.build.attachabr=
avrda.build.wireabr=
avrda.build.flmapabr=.ful
avrda.build.appspmabr=.spm{bootloader.CODESIZE}

#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^#
# AVR-DA submenu options                     #
#____________________________________________#
# Chip (memory and pincount)             #
#________________________________________#
avrda.menu.chip.avr128da28=AVR128DA28
avrda.menu.chip.avr128da28.build.mcu=avr128da28
avrda.menu.chip.avr128da28.upload.maximum_size=131072
avrda.menu.chip.avr128da28.upload.maximum_data_size=16384
avrda.menu.chip.avr128da28.build.variant=28pin-standard
avrda.menu.chip.avr128da32=AVR128DA32
avrda.menu.chip.avr128da32.build.mcu=avr128da32
avrda.menu.chip.avr128da32.upload.maximum_size=131072
avrda.menu.chip.avr128da32.upload.maximum_data_size=16384
avrda.menu.chip.avr128da32.build.variant=32pin-standard
avrda.menu.chip.avr128da48=AVR128DA48
avrda.menu.chip.avr128da48.build.mcu=avr128da48
avrda.menu.chip.avr128da48.upload.maximum_size=131072
avrda.menu.chip.avr128da48.upload.maximum_data_size=16384
avrda.menu.chip.avr128da48.build.variant=48pin-standard
avrda.menu.chip.avr128da64=AVR128DA64
avrda.menu.chip.avr128da64.build.mcu=avr128da64
avrda.menu.chip.avr128da64.upload.maximum_size=131072
avrda.menu.chip.avr128da64.upload.maximum_data_size=16384
avrda.menu.chip.avr128da64.build.variant=64pin-standard
avrda.menu.chip.avr64da28=AVR64DA28
avrda.menu.chip.avr64da28.build.mcu=avr64da28
avrda.menu.chip.avr64da28.upload.maximum_size=65536
avrda.menu.chip.avr64da28.upload.maximum_data_size=8192
avrda.menu.chip.avr64da28.build.variant=28pin-standard
avrda.menu.chip.avr64da32=AVR64DA32
avrda.menu.chip.avr64da32.build.mcu=avr64da32
avrda.menu.chip.avr64da32.upload.maximum_size=65536
avrda.menu.chip.avr64da32.upload.maximum_data_size=8192
avrda.menu.chip.avr64da32.build.variant=32pin-standard
avrda.menu.chip.avr64da48=AVR64DA48
avrda.menu.chip.avr64da48.build.mcu=avr64da48
avrda.menu.chip.avr64da48.upload.maximum_size=65536
avrda.menu.chip.avr64da48.upload.maximum_data_size=8192
avrda.menu.chip.avr64da48.build.variant=48pin-standard
avrda.menu.chip.avr64da64=AVR64DA64
avrda.menu.chip.avr64da64.build.mcu=avr64da64
avrda.menu.chip.avr64da64.upload.maximum_size=65536
avrda.menu.chip.avr64da64.upload.maximum_data_size=8192
avrda.menu.chip.avr64da64.build.variant=64pin-standard
avrda.menu.chip.avr32da28=AVR32DA28
avrda.menu.chip.avr32da28.build.mcu=avr32da28
avrda.menu.chip.avr32da28.upload.maximum_size=32768
avrda.menu.chip.avr32da28.upload.maximum_data_size=4096
avrda.menu.chip.avr32da28.build.variant=28pin-standard
avrda.menu.chip.avr32da32=AVR32DA32
avrda.menu.chip.avr32da32.build.mcu=avr32da32
avrda.menu.chip.avr32da32.upload.maximum_size=32768
avrda.menu.chip.avr32da32.upload.maximum_data_size=4096
avrda.menu.chip.avr32da32.build.variant=32pin-standard
avrda.menu.chip.avr32da48=AVR32DA48
avrda.menu.chip.avr32da48.build.mcu=avr32da48
avrda.menu.chip.avr32da48.upload.maximum_size=32768
avrda.menu.chip.avr32da48.upload.maximum_data_size=4096
avrda.menu.chip.avr32da48.build.variant=48pin-standard

avrda.menu.chip.avr128da28s=AVR128DA28S
avrda.menu.chip.avr128da28s.build.mcu=avr128da28
avrda.menu.chip.avr128da28s.upload.maximum_size=131072
avrda.menu.chip.avr128da28s.upload.maximum_data_size=16384
avrda.menu.chip.avr128da28s.build.variant=28pin-standard
avrda.menu.chip.avr128da32s=AVR128DA32S
avrda.menu.chip.avr128da32s.build.mcu=avr128da32
avrda.menu.chip.avr128da32s.upload.maximum_size=131072
avrda.menu.chip.avr128da32s.upload.maximum_data_size=16384
avrda.menu.chip.avr128da32s.build.variant=32pin-standard
avrda.menu.chip.avr128da48s=AVR128DA48S
avrda.menu.chip.avr128da48s.build.mcu=avr128da48
avrda.menu.chip.avr128da48s.upload.maximum_size=131072
avrda.menu.chip.avr128da48s.upload.maximum_data_size=16384
avrda.menu.chip.avr128da48s.build.variant=48pin-standard
avrda.menu.chip.avr128da64s=AVR128DA64S
avrda.menu.chip.avr128da64s.build.mcu=avr128da64
avrda.menu.chip.avr128da64s.upload.maximum_size=131072
avrda.menu.chip.avr128da64s.upload.maximum_data_size=16384
avrda.menu.chip.avr128da64s.build.variant=64pin-standard

#----------------------------------------#
# Clock speed and source options         #
#________________________________________#
avrda.menu.clock.24internal=24 MHz internal
avrda.menu.clock.24internal.build.speed=24
avrda.menu.clock.24internal.build.clocksource=0
avrda.menu.clock.20internal=20 MHz internal
avrda.menu.clock.20internal.build.speed=20
avrda.menu.clock.20internal.build.clocksource=0
avrda.menu.clock.16internal=16 MHz internal
avrda.menu.clock.16internal.build.speed=16
avrda.menu.clock.16internal.build.clocksource=0
avrda.menu.clock.12internal=12 MHz internal
avrda.menu.clock.12internal.build.speed=12
avrda.menu.clock.12internal.build.clocksource=0
avrda.menu.clock.10internal=10 MHz internal
avrda.menu.clock.10internal.build.speed=10
avrda.menu.clock.10internal.build.clocksource=0
avrda.menu.clock.8internal=8 MHz internal
avrda.menu.clock.8internal.build.speed=8
avrda.menu.clock.8internal.build.clocksource=0
avrda.menu.clock.5internal=5 MHz internal
avrda.menu.clock.5internal.build.speed=5
avrda.menu.clock.5internal.build.clocksource=0
avrda.menu.clock.4internal=4 MHz internal
avrda.menu.clock.4internal.build.speed=4
avrda.menu.clock.4internal.build.clocksource=0
avrda.menu.clock.1internal=1 MHz internal
avrda.menu.clock.1internal.build.speed=1
avrda.menu.clock.1internal.build.clocksource=0
avrda.menu.clock.24extclock=24 MHz ext. clock
avrda.menu.clock.24extclock.build.speed=24
avrda.menu.clock.24extclock.build.clocksource=2
avrda.menu.clock.20extclock=20 MHz ext. clock
avrda.menu.clock.20extclock.build.speed=20
avrda.menu.clock.20extclock.build.clocksource=2
avrda.menu.clock.16extclock=16 MHz ext. clock
avrda.menu.clock.16extclock.build.speed=16
avrda.menu.clock.16extclock.build.clocksource=2
avrda.menu.clock.12extclock=12 MHz ext. clock
avrda.menu.clock.12extclock.build.speed=12
avrda.menu.clock.12extclock.build.clocksource=2
avrda.menu.clock.8extclock=8 MHz ext. clock
avrda.menu.clock.8extclock.build.speed=8
avrda.menu.clock.8extclock.build.clocksource=2
avrda.menu.clock.28internal=28 MHz internal (overclocked)
avrda.menu.clock.28internal.build.speed=28
avrda.menu.clock.28internal.build.clocksource=0
avrda.menu.clock.32internal=32 MHz internal (overclocked)
avrda.menu.clock.32internal.build.speed=32
avrda.menu.clock.32internal.build.clocksource=0
avrda.menu.clock.25extclock=25 MHz ext. clock (slightly overclocked)
avrda.menu.clock.25extclock.build.speed=25
avrda.menu.clock.25extclock.build.clocksource=2
avrda.menu.clock.27extclock=27 MHz ext. clock (overclocked)
avrda.menu.clock.27extclock.build.speed=27
avrda.menu.clock.27extclock.build.clocksource=2
avrda.menu.clock.28extclock=28 MHz ext. clock (overclocked)
avrda.menu.clock.28extclock.build.speed=28
avrda.menu.clock.28extclock.build.clocksource=2
avrda.menu.clock.30extclock=30 MHz ext. clock (overclocked)
avrda.menu.clock.30extclock.build.speed=30
avrda.menu.clock.30extclock.build.clocksource=2
avrda.menu.clock.32extclock=32 MHz ext. clock (overclocked)
avrda.menu.clock.32extclock.build.speed=32
avrda.menu.clock.32extclock.build.clocksource=2
avrda.menu.clock.36extclock=36 MHz ext. clock (highly overclocked)
avrda.menu.clock.36extclock.build.speed=36
avrda.menu.clock.36extclock.build.clocksource=2
avrda.menu.clock.40extclock=40 MHz ext. clock (highly overclocked)
avrda.menu.clock.40extclock.build.speed=40
avrda.menu.clock.40extclock.build.clocksource=2
avrda.menu.clock.48extclock=48 MHz ext. clock (WAY overclocked)
avrda.menu.clock.48extclock.build.speed=48
avrda.menu.clock.48extclock.build.clocksource=2

#----------------------------------------#
# BrownOut detection (BOD) options       #
#________________________________________#
avrda.menu.bodvoltage.1v9=1.9V
avrda.menu.bodvoltage.1v9.bootloader.bodlevbits=000
avrda.menu.bodvoltage.2v45=2.45V
avrda.menu.bodvoltage.2v45.bootloader.bodlevbits=001
avrda.menu.bodvoltage.2v70=2.70V
avrda.menu.bodvoltage.2v70.bootloader.bodlevbits=010
avrda.menu.bodvoltage.2v85=2.85V
avrda.menu.bodvoltage.2v85.bootloader.bodlevbits=011
avrda.menu.bodmode.disabled=Disabled/Disabled
avrda.menu.bodmode.enabled=Enabled/Enabled
avrda.menu.bodmode.ensampfast=Enabled/Sampled (128 Hz)
avrda.menu.bodmode.ensampslow=Enabled/Sampled (32 Hz)
avrda.menu.bodmode.sampledfast=Sampled/Sampled (128 Hz)
avrda.menu.bodmode.sampledslow=Sampled/Sampled (32 Hz)
avrda.menu.bodmode.sampdisfast=Sampled/Disabled (128 Hz)
avrda.menu.bodmode.sampdisslow=Sampled/Disabled (32 Hz)
avrda.menu.bodmode.endisholdwake=Enabled hold wakeup/Disabled
avrda.menu.bodmode.disabled.bootloader.BODCFG=0x00
avrda.menu.bodmode.enabled.bootloader.bodmodebits=00101
avrda.menu.bodmode.ensampfast.bootloader.bodmodebits=00110
avrda.menu.bodmode.ensampslow.bootloader.bodmodebits=10110
avrda.menu.bodmode.samplefast.bootloader.bodmodebits=01010
avrda.menu.bodmode.sampleslow.bootloader.bodmodebits=11010
avrda.menu.bodmode.sampdisfast.bootloader.bodmodebits=01000
avrda.menu.bodmode.sampdisslow.bootloader.bodmodebits=11000
avrda.menu.bodmode.endisholdwake.bootloader.bodmodebits=01100

#----------------------------------------#
# Retain EEPROM (EESAVE)                 #
#________________________________________#
avrda.menu.eesave.enable=EEPROM retained
avrda.menu.eesave.enable.bootloader.eesavebit=1
avrda.menu.eesave.disable=EEPROM not retained
avrda.menu.eesave.disable.bootloader.eesavebit=0

#----------------------------------------#
# Reset pin as input option              #
#________________________________________#
avrda.menu.resetpin.reset=Hardware Reset (recommended)
avrda.menu.resetpin.reset.bootloader.resetpinbits=10
avrda.menu.resetpin.input=Input (no output, ever)
avrda.menu.resetpin.input.bootloader.resetpinbits=00

#----------------------------------------#
# millis/micros timing source            #
#________________________________________#
avrda.menu.millis.tcb2=TCB2 (recommended)
avrda.menu.millis.disabled=Disabled
avrda.menu.millis.tcb0=TCB0
avrda.menu.millis.tcb1=TCB1
avrda.menu.millis.tcb3=TCB3 (48/64-pin parts only)
avrda.menu.millis.tcb4=TCB4 (64-pin parts only)
avrda.menu.millis.tca0=TCA0
avrda.menu.millis.tca1=TCA1 (48/64-pin parts only)
avrda.menu.millis.tcb0.build.millistimer=B0
avrda.menu.millis.tcb1.build.millistimer=B1
avrda.menu.millis.tcb2.build.millistimer=B2
avrda.menu.millis.tcb3.build.millistimer=B3
avrda.menu.millis.tcb4.build.millistimer=B4
avrda.menu.millis.tca0.build.millistimer=A0
avrda.menu.millis.tca1.build.millistimer=A1
avrda.menu.millis.disabled.build.millistimer=NONE

#----------------------------------------#
# printf() version options               #
#________________________________________#
avrda.menu.printf.default=Default, 1.5k flash, no floats
avrda.menu.printf.full=Full, 2.6k, prints floats
avrda.menu.printf.full.build.printf=-Wl,-u,vfprintf -lprintf_flt
avrda.menu.printf.full.build.printfabr=.pfF
avrda.menu.printf.minimal=Minimal, 1.1k flash used
avrda.menu.printf.minimal.build.printf=-Wl,-u,vfprintf -lprintf_min
avrda.menu.printf.minimal.build.printfabr=.pfM

#----------------------------------------#
# OPTIMIZATION OPTIONS                   #
#________________________________________#
#avrda.menu.optimization.size=-Os (size)
#avrda.menu.optimization.sizegcse=-Os (size, no GCSE)
#avrda.menu.optimization.o3=-O3 (speed)
#avrda.menu.optimization.o3gcse=-O3 (speed, no GCSE)
#avrda.menu.optimization.size.build.optimizationlevel=-Os
#avrda.menu.optimization.sizegcse.build.optimizationlevel=-Os
#avrda.menu.optimization.o3.build.optimizationlevel=-O3
#avrda.menu.optimization.o3gcse.build.optimizationlevel=-O3
#avrda.menu.optimization.size.build.optabr=.Os
#avrda.menu.optimization.sizegcse.build.optabr=.Osng
#avrda.menu.optimization.o3.build.optabr=.O3
#avrda.menu.optimization.o3gcse.build.optabr=.O3ng
#avrda.menu.optimization.sizegcse.build.gcse=-fno-gcse
#avrda.menu.optimization.o3gcse.build.gcse=-fno-gcse

#----------------------------------------#
# attachInterrupt Mode                   #
#________________________________________#
avrda.menu.attach.allenabled=On all pins, with new implementation.
avrda.menu.attach.allenabled.build.attachmode=-DCORE_ATTACH_ALL
avrda.menu.attach.manual=Only enabled ports. Please see documentation
avrda.menu.attach.manual.build.attachmode=-DCORE_ATTACH_NONE
avrda.menu.attach.oldversion=Old version, (may fix bugs)
avrda.menu.attach.oldversion.build.attachmode=-DCORE_ATTACH_OLD
avrda.menu.attach.manual.build.attachabr=.aMan
avrda.menu.attach.oldversion.build.attachabr=.aOld

#----------------------------------------#
# Startup time options                   #
#________________________________________#
avrda.menu.startuptime.8=8ms
avrda.menu.startuptime.1=0ms
avrda.menu.startuptime.1=1ms
avrda.menu.startuptime.2=2ms
avrda.menu.startuptime.4=4ms
avrda.menu.startuptime.16=16ms
avrda.menu.startuptime.32=32ms
avrda.menu.startuptime.64=64ms
avrda.menu.startuptime.0.bootloader.SYSCFG1=0x00
avrda.menu.startuptime.1.bootloader.SYSCFG1=0x01
avrda.menu.startuptime.2.bootloader.SYSCFG1=0x02
avrda.menu.startuptime.4.bootloader.SYSCFG1=0x03
avrda.menu.startuptime.8.bootloader.SYSCFG1=0x04
avrda.menu.startuptime.16.bootloader.SYSCFG1=0x05
avrda.menu.startuptime.32.bootloader.SYSCFG1=0x06
avrda.menu.startuptime.64.bootloader.SYSCFG1=0x07

#-------------------------------------#
#         Wire Mode Selection         #
# To enable TWI1 or master+slave mode #
#_____________________________________#
avrda.menu.wiremode.mors=1x Wire, Master or Slave (least Flash & RAM)
avrda.menu.wiremode.mors.build.wiremode=MORS_SINGLE
avrda.menu.wiremode.mors.build.wireabr=.wO
avrda.menu.wiremode.mands=1x Wire, Master and Slave
avrda.menu.wiremode.mands.build.wiremode=MANDS_SINGLE
avrda.menu.wiremode.mands.build.wireabr=.wA
avrda.menu.wiremode.mors2=2x Wire, Master or Slave (32+ pin devices only)
avrda.menu.wiremode.mors2.build.wiremode=MORS_BOTH
avrda.menu.wiremode.mors2.build.wireabr=.wO2
avrda.menu.wiremode.mands2=2x Wire, Master and Slave (32+ pin devices only)
avrda.menu.wiremode.mands2.build.wiremode=MANDS_BOTH
avrda.menu.wiremode.mands2.build.wireabr=.wA2


#----------------------------------------#
# Flash Mapping options                  #
#________________________________________#
avrda.menu.flmap.lockdefault=Use last FLMAP section, lock FLMAP, provide PROGMEM_MAPPED
avrda.menu.flmap.unlocked=Start w/default, do not lock flmap. No PROGMEM_MAPPED.
avrda.menu.flmap.locksection02=Set FLMAP to section 2, lock FLMAP, provide PROGMEM_MAPPED
avrda.menu.flmap.locksection1=Set FLMAP to section 1, lock FLMAP, provide PROGMEM_MAPPED
avrda.menu.flmap.locksection0=Set FLMAP to section 0, lock FLMAP, provide PROGMEM_MAPPED
avrda.menu.flmap.lockdefault.build.flmapopts=-DLOCK_FLMAP -DFLMAPSECTION3
avrda.menu.flmap.unlocked.build.flmapopts=
avrda.menu.flmap.locksection02.build.flmapopts=-DLOCK_FLMAP -DFLMAPSECTION2
avrda.menu.flmap.locksection1.build.flmapopts=-DLOCK_FLMAP -DFLMAPSECTION1
avrda.menu.flmap.locksection0.build.flmapopts=-DLOCK_FLMAP -DFLMAPSECTION0
avrda.menu.flmap.lockdefault.build.flmapabr=.fld
avrda.menu.flmap.unlocked.build.flmapabr=.ful
avrda.menu.flmap.locksection02.build.flmapabr=.fl2
avrda.menu.flmap.locksection1.build.flmapabr=.fl1
avrda.menu.flmap.locksection0.build.flmapabr=.fl0

#----------------------------------------#
# SPM (writing flash from app)           #
#________________________________________#
avrda.menu.appspm.no=Disabled (Always use this if not writing flash from app)
avrda.menu.appspm.no.bootloader.appspm=
avrda.menu.appspm.no.bootloader.BOOTSIZE=0x00
avrda.menu.appspm.no.build.appspmabr=
avrda.menu.appspm.full=Anywhere after 0x0200 (Warning: App allowed to overwrite itself)
avrda.menu.appspm.full.bootloader.appspm=-DSPM_FROM_APP=-1
avrda.menu.appspm.full.build.appspmabr=.spmALL
avrda.menu.appspm.16plus=Above 16k
avrda.menu.appspm.16plus.bootloader.appspm=-DSPM_FROM_APP=32
avrda.menu.appspm.16plus.bootloader.CODESIZE=32
avrda.menu.appspm.24plus=Above 24k
avrda.menu.appspm.24plus.bootloader.appspm=-DSPM_FROM_APP=48
avrda.menu.appspm.24plus.bootloader.CODESIZE=48
avrda.menu.appspm.32plus=Above 32k (AVR128/64 only)
avrda.menu.appspm.32plus.bootloader.appspm=-DSPM_FROM_APP=64
avrda.menu.appspm.32plus.bootloader.CODESIZE=64
avrda.menu.appspm.48plus=Above 48k (AVR128/64 only)
avrda.menu.appspm.48plus.bootloader.appspm=-DSPM_FROM_APP=96
avrda.menu.appspm.48plus.bootloader.CODESIZE=96
avrda.menu.appspm.56plus=Above 56k (AVR128/64 only)
avrda.menu.appspm.56plus.bootloader.appspm=-DSPM_FROM_APP=112
avrda.menu.appspm.56plus.bootloader.CODESIZE=112
avrda.menu.appspm.60plus=Above 60k (AVR128/64 only)
avrda.menu.appspm.60plus.bootloader.appspm=-DSPM_FROM_APP=120
avrda.menu.appspm.60plus.bootloader.CODESIZE=120
avrda.menu.appspm.64plus=Above 64k (AVR128 only)
avrda.menu.appspm.64plus.bootloader.appspm=-DSPM_FROM_APP=128
avrda.menu.appspm.64plus.bootloader.CODESIZE=128
avrda.menu.appspm.80plus=Above 80k (AVR128 only)
avrda.menu.appspm.80plus.bootloader.appspm=-DSPM_FROM_APP=160
avrda.menu.appspm.80plus.bootloader.CODESIZE=160
avrda.menu.appspm.96plus=Above 96k (AVR128 only)
avrda.menu.appspm.96plus.bootloader.appspm=-DSPM_FROM_APP=192
avrda.menu.appspm.96plus.bootloader.CODESIZE=192
avrda.menu.appspm.112plus=Above 112k (AVR128 only)
avrda.menu.appspm.112plus.bootloader.appspm=-DSPM_FROM_APP=224
avrda.menu.appspm.112plus.bootloader.CODESIZE=224
avrda.menu.appspm.120plus=Above 120k (AVR128 only)
avrda.menu.appspm.120plus.bootloader.appspm=-DSPM_FROM_APP=240
avrda.menu.appspm.120plus.bootloader.CODESIZE=240

#----------------------------------------#
# WDT MODE                               #
#________________________________________#
avrda.menu.WDTtimeout.disabled=Disabled (recommended)
avrda.menu.WDTtimeout.8seconds=Window remains open for 8 Seconds
avrda.menu.WDTtimeout.4seconds=Window remains open for 4 Seconds
avrda.menu.WDTtimeout.2seconds=Window remains open for 2 Seconds
avrda.menu.WDTtimeout.1second=Window remains open for 1 Second
avrda.menu.WDTtimeout.500msec=Window remains open for 500 milliseconds
avrda.menu.WDTtimeout.250msec=Window remains open for 250 milliseconds
avrda.menu.WDTtimeout.125msec=Window remains open for 125 milliseconds
avrda.menu.WDTtimeout.63msec=Window remains open for 62.5 milliseconds
avrda.menu.WDTwindow.disabled=No delay before window "opens"
avrda.menu.WDTwindow.8seconds=8 Second before window "opens"
avrda.menu.WDTwindow.4seconds=4 Second before window "opens"
avrda.menu.WDTwindow.2seconds=2 Second before window "opens"
avrda.menu.WDTwindow.1second=1 Second before window "opens"
avrda.menu.WDTwindow.500msec=500 millisecond before window "opens"
avrda.menu.WDTwindow.250msec=250 millisecond before window "opens"
avrda.menu.WDTwindow.125msec=125 millisecond before window "opens"
avrda.menu.WDTwindow.63msec=62.5 millisecond before window "opens"
avrda.menu.WDTtimeout.disabled.bootloader.wdttimeoutbits=0000
avrda.menu.WDTtimeout.8seconds.bootloader.wdttimeoutbits=1011
avrda.menu.WDTtimeout.4seconds.bootloader.wdttimeoutbits=1010
avrda.menu.WDTtimeout.2seconds.bootloader.wdttimeoutbits=1001
avrda.menu.WDTtimeout.1second.bootloader.wdttimeoutbits=1000
avrda.menu.WDTtimeout.500msec.bootloader.wdttimeoutbits=0111
avrda.menu.WDTtimeout.250msec.bootloader.wdttimeoutbits=0110
avrda.menu.WDTtimeout.125msec.bootloader.wdttimeoutbits=0101
avrda.menu.WDTtimeout.63msec.bootloader.wdttimeoutbits=0100
avrda.menu.WDTwindow.disabled.bootloader.wdtwindowbits=0000
avrda.menu.WDTwindow.8seconds.bootloader.wdtwindowbits=1011
avrda.menu.WDTwindow.4seconds.bootloader.wdtwindowbits=1010
avrda.menu.WDTwindow.2seconds.bootloader.wdtwindowbits=1001
avrda.menu.WDTwindow.1second.bootloader.wdtwindowbits=1000
avrda.menu.WDTwindow.500msec.bootloader.wdtwindowbits=0111
avrda.menu.WDTwindow.250msec.bootloader.wdtwindowbits=0110
avrda.menu.WDTwindow.125msec.bootloader.wdtwindowbits=0101
avrda.menu.WDTwindow.63msec.bootloader.wdtwindowbits=0100

######################################################################################################
#                                                                                                     #
###                 ###  #     # ####      ####   ###        #     #   ###   #      #   ####          ###
#####              #   # #     # #   #     #   # #   #       # #   #  #   #  # #    #  #    #         #####
#######            #####  #   #  ####  ### #   # #####  ***  #  #  #  #####  #  #   #  #    #         #######
#####              #   #   # #   # #       #   # #   #       #   # #  #   #  #    # #  #    #         #####
###                #   #    #    #  #      ####  #   #       #     #  #   #  #      #   ####          ###
#_____________________________________________________________________________________________________#
#                                                     #
# Parameters and defaults for AVR DA Curiosity Nano   #
#_____________________________________________________#
avrdanano.upload.tool=avrdude
avrdanano.upload.prog_interlock=
avrdanano.build.board=avrdanano
avrdanano.build.core=dxcore
avrdanano.upload.maximum_size=0
avrdanano.upload.maximum_data_size=0
# The maximum size and data size attributes are overridden by the selected chip. If you are avoiding specifying that somehow, there is no hope of anything working, so don't do that.
# Each top-level entry supports at least a dozen parts with varying memory constraints.
avrdanano.build.f_cpu={build.speed}000000L
avrdanano.build.text_section_start=.text=0x0
avrdanano.build.extra_flags= {bootloader.appspm}
avrdanano.build.export_merged_output=false
avrdanano.build.printf=
avrdanano.build.flmapopts=
avrdanano.build.attachmode=-DCORE_ATTACH_ALL

#----------------------------------------#
# Bootloading parameters and fuses       #
#________________________________________#
avrdanano.bootloader.tool=avrdude
avrdanano.bootloader.WDTCFG=0b{bootloader.wdtwindowbits}{bootloader.wdttimeoutbits}
avrdanano.bootloader.wdtwindowbits=0000
avrdanano.bootloader.wdttimeotbits=0000
avrdanano.bootloader.BODCFG=0b{bootloader.bodlevbits}{bootloader.bodmodebits}
avrdanano.bootloader.SYSCFG0=0b1100{bootloader.resetpinbits}0{bootloader.eesavebit}
avrdanano.bootloader.CODESIZE=0x00
avrdanano.bootloader.BOOTSIZE=0x01
# Note that BOOTSIZE is overridden by App SPM menu's default option - this way is just less verbose.
avrdanano.bootloader.avrdudestring=
avrdanano.bootloader.pymcuprogstring=-aerase

#----------------------------------------#
# Exported hex/lst/map names will        #
# indicate selected options. These       #
# are only to do that, nothing else      #
#________________________________________#
avrdanano.build.mcupostfix=
avrdanano.build.printfabr=
avrdanano.build.attachabr=
avrdanano.build.wireabr=
avrdanano.build.flmapabr=.ful
avrdanano.build.appspmabr=.spm{bootloader.CODESIZE}

#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^#
# AVR-DA submenu options                     #
#____________________________________________#
# Chip (memory and pincount)             #
#________________________________________#
avrdanano.menu.chip.avr128da48=AVR128DA48
avrdanano.menu.chip.avr128da48.build.mcu=avr128da48
avrdanano.menu.chip.avr128da48.upload.maximum_size=131072
avrdanano.menu.chip.avr128da48.upload.maximum_data_size=16384
avrdanano.menu.chip.avr128da48.build.variant=48pin-standard

#----------------------------------------#
# Clock speed and source options         #
#________________________________________#
avrdanano.menu.clock.24internal=24 MHz internal
avrdanano.menu.clock.24internal.build.speed=24
avrdanano.menu.clock.24internal.build.clocksource=0
avrdanano.menu.clock.20internal=20 MHz internal
avrdanano.menu.clock.20internal.build.speed=20
avrdanano.menu.clock.20internal.build.clocksource=0
avrdanano.menu.clock.16internal=16 MHz internal
avrdanano.menu.clock.16internal.build.speed=16
avrdanano.menu.clock.16internal.build.clocksource=0
avrdanano.menu.clock.12internal=12 MHz internal
avrdanano.menu.clock.12internal.build.speed=12
avrdanano.menu.clock.12internal.build.clocksource=0
avrdanano.menu.clock.10internal=10 MHz internal
avrdanano.menu.clock.10internal.build.speed=10
avrdanano.menu.clock.10internal.build.clocksource=0
avrdanano.menu.clock.8internal=8 MHz internal
avrdanano.menu.clock.8internal.build.speed=8
avrdanano.menu.clock.8internal.build.clocksource=0
avrdanano.menu.clock.5internal=5 MHz internal
avrdanano.menu.clock.5internal.build.speed=5
avrdanano.menu.clock.5internal.build.clocksource=0
avrdanano.menu.clock.4internal=4 MHz internal
avrdanano.menu.clock.4internal.build.speed=4
avrdanano.menu.clock.4internal.build.clocksource=0
avrdanano.menu.clock.1internal=1 MHz internal
avrdanano.menu.clock.1internal.build.speed=1
avrdanano.menu.clock.1internal.build.clocksource=0
avrdanano.menu.clock.24extclock=24 MHz ext. clock
avrdanano.menu.clock.24extclock.build.speed=24
avrdanano.menu.clock.24extclock.build.clocksource=2
avrdanano.menu.clock.20extclock=20 MHz ext. clock
avrdanano.menu.clock.20extclock.build.speed=20
avrdanano.menu.clock.20extclock.build.clocksource=2
avrdanano.menu.clock.16extclock=16 MHz ext. clock
avrdanano.menu.clock.16extclock.build.speed=16
avrdanano.menu.clock.16extclock.build.clocksource=2
avrdanano.menu.clock.12extclock=12 MHz ext. clock
avrdanano.menu.clock.12extclock.build.speed=12
avrdanano.menu.clock.12extclock.build.clocksource=2
avrdanano.menu.clock.8extclock=8 MHz ext. clock
avrdanano.menu.clock.8extclock.build.speed=8
avrdanano.menu.clock.8extclock.build.clocksource=2
avrdanano.menu.clock.28internal=28 MHz internal (overclocked)
avrdanano.menu.clock.28internal.build.speed=28
avrdanano.menu.clock.28internal.build.clocksource=0
avrdanano.menu.clock.32internal=32 MHz internal (overclocked)
avrdanano.menu.clock.32internal.build.speed=32
avrdanano.menu.clock.32internal.build.clocksource=0
avrdanano.menu.clock.25extclock=25 MHz ext. clock (slightly overclocked)
avrdanano.menu.clock.25extclock.build.speed=25
avrdanano.menu.clock.25extclock.build.clocksource=2
avrdanano.menu.clock.27extclock=27 MHz ext. clock (overclocked)
avrdanano.menu.clock.27extclock.build.speed=27
avrdanano.menu.clock.27extclock.build.clocksource=2
avrdanano.menu.clock.28extclock=28 MHz ext. clock (overclocked)
avrdanano.menu.clock.28extclock.build.speed=28
avrdanano.menu.clock.28extclock.build.clocksource=2
avrdanano.menu.clock.30extclock=30 MHz ext. clock (overclocked)
avrdanano.menu.clock.30extclock.build.speed=30
avrdanano.menu.clock.30extclock.build.clocksource=2
avrdanano.menu.clock.32extclock=32 MHz ext. clock (overclocked)
avrdanano.menu.clock.32extclock.build.speed=32
avrdanano.menu.clock.32extclock.build.clocksource=2
avrdanano.menu.clock.36extclock=36 MHz ext. clock (highly overclocked)
avrdanano.menu.clock.36extclock.build.speed=36
avrdanano.menu.clock.36extclock.build.clocksource=2
avrdanano.menu.clock.40extclock=40 MHz ext. clock (highly overclocked)
avrdanano.menu.clock.40extclock.build.speed=40
avrdanano.menu.clock.40extclock.build.clocksource=2
avrdanano.menu.clock.48extclock=48 MHz ext. clock (WAY overclocked)
avrdanano.menu.clock.48extclock.build.speed=48
avrdanano.menu.clock.48extclock.build.clocksource=2

#----------------------------------------#
# BrownOut detection (BOD) options       #
#________________________________________#
avrdanano.menu.bodvoltage.1v9=1.9V
avrdanano.menu.bodvoltage.1v9.bootloader.bodlevbits=000
avrdanano.menu.bodvoltage.2v45=2.45V
avrdanano.menu.bodvoltage.2v45.bootloader.bodlevbits=001
avrdanano.menu.bodvoltage.2v70=2.70V
avrdanano.menu.bodvoltage.2v70.bootloader.bodlevbits=010
avrdanano.menu.bodvoltage.2v85=2.85V
avrdanano.menu.bodvoltage.2v85.bootloader.bodlevbits=011
avrdanano.menu.bodmode.disabled=Disabled/Disabled
avrdanano.menu.bodmode.enabled=Enabled/Enabled
avrdanano.menu.bodmode.ensampfast=Enabled/Sampled (128 Hz)
avrdanano.menu.bodmode.ensampslow=Enabled/Sampled (32 Hz)
avrdanano.menu.bodmode.sampledfast=Sampled/Sampled (128 Hz)
avrdanano.menu.bodmode.sampledslow=Sampled/Sampled (32 Hz)
avrdanano.menu.bodmode.sampdisfast=Sampled/Disabled (128 Hz)
avrdanano.menu.bodmode.sampdisslow=Sampled/Disabled (32 Hz)
avrdanano.menu.bodmode.endisholdwake=Enabled hold wakeup/Disabled
avrdanano.menu.bodmode.disabled.bootloader.BODCFG=0x00
avrdanano.menu.bodmode.enabled.bootloader.bodmodebits=00101
avrdanano.menu.bodmode.ensampfast.bootloader.bodmodebits=00110
avrdanano.menu.bodmode.ensampslow.bootloader.bodmodebits=10110
avrdanano.menu.bodmode.samplefast.bootloader.bodmodebits=01010
avrdanano.menu.bodmode.sampleslow.bootloader.bodmodebits=11010
avrdanano.menu.bodmode.sampdisfast.bootloader.bodmodebits=01000
avrdanano.menu.bodmode.sampdisslow.bootloader.bodmodebits=11000
avrdanano.menu.bodmode.endisholdwake.bootloader.bodmodebits=01100

#----------------------------------------#
# Retain EEPROM (EESAVE)                 #
#________________________________________#
avrdanano.menu.eesave.enable=EEPROM retained
avrdanano.menu.eesave.enable.bootloader.eesavebit=1
avrdanano.menu.eesave.disable=EEPROM not retained
avrdanano.menu.eesave.disable.bootloader.eesavebit=0

#----------------------------------------#
# Reset pin as input option              #
#________________________________________#
avrdanano.menu.resetpin.reset=Hardware Reset (recommended)
avrdanano.menu.resetpin.reset.bootloader.resetpinbits=10
avrdanano.menu.resetpin.input=Input (no output, ever)
avrdanano.menu.resetpin.input.bootloader.resetpinbits=00

#----------------------------------------#
# millis/micros timing source            #
#________________________________________#
avrdanano.menu.millis.tcb2=TCB2 (recommended)
avrdanano.menu.millis.disabled=Disabled
avrdanano.menu.millis.tcb0=TCB0
avrdanano.menu.millis.tcb1=TCB1
avrdanano.menu.millis.tcb3=TCB3 (48/64-pin parts only)
avrdanano.menu.millis.tcb4=TCB4 (64-pin parts only)
avrdanano.menu.millis.tca0=TCA0
avrdanano.menu.millis.tca1=TCA1 (48/64-pin parts only)
avrdanano.menu.millis.tcb0.build.millistimer=B0
avrdanano.menu.millis.tcb1.build.millistimer=B1
avrdanano.menu.millis.tcb2.build.millistimer=B2
avrdanano.menu.millis.tcb3.build.millistimer=B3
avrdanano.menu.millis.tcb4.build.millistimer=B4
avrdanano.menu.millis.tca0.build.millistimer=A0
avrdanano.menu.millis.tca1.build.millistimer=A1
avrdanano.menu.millis.disabled.build.millistimer=NONE

#----------------------------------------#
# printf() version options               #
#________________________________________#
avrdanano.menu.printf.default=Default, 1.5k flash, no floats
avrdanano.menu.printf.full=Full, 2.6k, prints floats
avrdanano.menu.printf.full.build.printf=-Wl,-u,vfprintf -lprintf_flt
avrdanano.menu.printf.full.build.printfabr=.pfF
avrdanano.menu.printf.minimal=Minimal, 1.1k flash used
avrdanano.menu.printf.minimal.build.printf=-Wl,-u,vfprintf -lprintf_min
avrdanano.menu.printf.minimal.build.printfabr=.pfM

#----------------------------------------#
# OPTIMIZATION OPTIONS                   #
#________________________________________#
#avrdanano.menu.optimization.size=-Os (size)
#avrdanano.menu.optimization.sizegcse=-Os (size, no GCSE)
#avrdanano.menu.optimization.o3=-O3 (speed)
#avrdanano.menu.optimization.o3gcse=-O3 (speed, no GCSE)
#avrdanano.menu.optimization.size.build.optimizationlevel=-Os
#avrdanano.menu.optimization.sizegcse.build.optimizationlevel=-Os
#avrdanano.menu.optimization.o3.build.optimizationlevel=-O3
#avrdanano.menu.optimization.o3gcse.build.optimizationlevel=-O3
#avrdanano.menu.optimization.size.build.optabr=.Os
#avrdanano.menu.optimization.sizegcse.build.optabr=.Osng
#avrdanano.menu.optimization.o3.build.optabr=.O3
#avrdanano.menu.optimization.o3gcse.build.optabr=.O3ng
#avrdanano.menu.optimization.sizegcse.build.gcse=-fno-gcse
#avrdanano.menu.optimization.o3gcse.build.gcse=-fno-gcse

#----------------------------------------#
# attachInterrupt Mode                   #
#________________________________________#
avrdanano.menu.attach.allenabled=On all pins, with new implementation.
avrdanano.menu.attach.allenabled.build.attachmode=-DCORE_ATTACH_ALL
avrdanano.menu.attach.manual=Only enabled ports. Please see documentation
avrdanano.menu.attach.manual.build.attachmode=-DCORE_ATTACH_NONE
avrdanano.menu.attach.oldversion=Old version, (may fix bugs)
avrdanano.menu.attach.oldversion.build.attachmode=-DCORE_ATTACH_OLD
avrdanano.menu.attach.manual.build.attachabr=.aMan
avrdanano.menu.attach.oldversion.build.attachabr=.aOld

#----------------------------------------#
# Startup time options                   #
#________________________________________#
avrdanano.menu.startuptime.8=8ms
avrdanano.menu.startuptime.1=0ms
avrdanano.menu.startuptime.1=1ms
avrdanano.menu.startuptime.2=2ms
avrdanano.menu.startuptime.4=4ms
avrdanano.menu.startuptime.16=16ms
avrdanano.menu.startuptime.32=32ms
avrdanano.menu.startuptime.64=64ms
avrdanano.menu.startuptime.0.bootloader.SYSCFG1=0x00
avrdanano.menu.startuptime.1.bootloader.SYSCFG1=0x01
avrdanano.menu.startuptime.2.bootloader.SYSCFG1=0x02
avrdanano.menu.startuptime.4.bootloader.SYSCFG1=0x03
avrdanano.menu.startuptime.8.bootloader.SYSCFG1=0x04
avrdanano.menu.startuptime.16.bootloader.SYSCFG1=0x05
avrdanano.menu.startuptime.32.bootloader.SYSCFG1=0x06
avrdanano.menu.startuptime.64.bootloader.SYSCFG1=0x07

#-------------------------------------#
#         Wire Mode Selection         #
# To enable TWI1 or master+slave mode #
#_____________________________________#
avrdanano.menu.wiremode.mors=1x Wire, Master or Slave (least Flash & RAM)
avrdanano.menu.wiremode.mors.build.wiremode=MORS_SINGLE
avrdanano.menu.wiremode.mors.build.wireabr=.wO
avrdanano.menu.wiremode.mands=1x Wire, Master and Slave
avrdanano.menu.wiremode.mands.build.wiremode=MANDS_SINGLE
avrdanano.menu.wiremode.mands.build.wireabr=.wA
avrdanano.menu.wiremode.mors2=2x Wire, Master or Slave (32+ pin devices only)
avrdanano.menu.wiremode.mors2.build.wiremode=MORS_BOTH
avrdanano.menu.wiremode.mors2.build.wireabr=.wO2
avrdanano.menu.wiremode.mands2=2x Wire, Master and Slave (32+ pin devices only)
avrdanano.menu.wiremode.mands2.build.wiremode=MANDS_BOTH
avrdanano.menu.wiremode.mands2.build.wireabr=.wA2


#----------------------------------------#
# Flash Mapping options                  #
#________________________________________#
avrdanano.menu.flmap.lockdefault=Use last FLMAP section, lock FLMAP, provide PROGMEM_MAPPED
avrdanano.menu.flmap.unlocked=Start w/default, do not lock flmap. No PROGMEM_MAPPED.
avrdanano.menu.flmap.locksection02=Set FLMAP to section 2, lock FLMAP, provide PROGMEM_MAPPED
avrdanano.menu.flmap.locksection1=Set FLMAP to section 1, lock FLMAP, provide PROGMEM_MAPPED
avrdanano.menu.flmap.locksection0=Set FLMAP to section 0, lock FLMAP, provide PROGMEM_MAPPED
avrdanano.menu.flmap.lockdefault.build.flmapopts=-DLOCK_FLMAP -DFLMAPSECTION3
avrdanano.menu.flmap.unlocked.build.flmapopts=
avrdanano.menu.flmap.locksection02.build.flmapopts=-DLOCK_FLMAP -DFLMAPSECTION2
avrdanano.menu.flmap.locksection1.build.flmapopts=-DLOCK_FLMAP -DFLMAPSECTION1
avrdanano.menu.flmap.locksection0.build.flmapopts=-DLOCK_FLMAP -DFLMAPSECTION0
avrdanano.menu.flmap.lockdefault.build.flmapabr=.fld
avrdanano.menu.flmap.unlocked.build.flmapabr=.ful
avrdanano.menu.flmap.locksection02.build.flmapabr=.fl2
avrdanano.menu.flmap.locksection1.build.flmapabr=.fl1
avrdanano.menu.flmap.locksection0.build.flmapabr=.fl0

#----------------------------------------#
# SPM (writing flash from app)           #
#________________________________________#
avrdanano.menu.appspm.no=Disabled (Always use this if not writing flash from app)
avrdanano.menu.appspm.no.bootloader.appspm=
avrdanano.menu.appspm.no.bootloader.BOOTSIZE=0x00
avrdanano.menu.appspm.no.build.appspmabr=
avrdanano.menu.appspm.full=Anywhere after 0x0200 (Warning: App allowed to overwrite itself)
avrdanano.menu.appspm.full.bootloader.appspm=-DSPM_FROM_APP=-1
avrdanano.menu.appspm.full.build.appspmabr=.spmALL
avrdanano.menu.appspm.16plus=Above 16k
avrdanano.menu.appspm.16plus.bootloader.appspm=-DSPM_FROM_APP=32
avrdanano.menu.appspm.16plus.bootloader.CODESIZE=32
avrdanano.menu.appspm.24plus=Above 24k
avrdanano.menu.appspm.24plus.bootloader.appspm=-DSPM_FROM_APP=48
avrdanano.menu.appspm.24plus.bootloader.CODESIZE=48
avrdanano.menu.appspm.32plus=Above 32k (AVR128/64 only)
avrdanano.menu.appspm.32plus.bootloader.appspm=-DSPM_FROM_APP=64
avrdanano.menu.appspm.32plus.bootloader.CODESIZE=64
avrdanano.menu.appspm.48plus=Above 48k (AVR128/64 only)
avrdanano.menu.appspm.48plus.bootloader.appspm=-DSPM_FROM_APP=96
avrdanano.menu.appspm.48plus.bootloader.CODESIZE=96
avrdanano.menu.appspm.56plus=Above 56k (AVR128/64 only)
avrdanano.menu.appspm.56plus.bootloader.appspm=-DSPM_FROM_APP=112
avrdanano.menu.appspm.56plus.bootloader.CODESIZE=112
avrdanano.menu.appspm.60plus=Above 60k (AVR128/64 only)
avrdanano.menu.appspm.60plus.bootloader.appspm=-DSPM_FROM_APP=120
avrdanano.menu.appspm.60plus.bootloader.CODESIZE=120
avrdanano.menu.appspm.64plus=Above 64k (AVR128 only)
avrdanano.menu.appspm.64plus.bootloader.appspm=-DSPM_FROM_APP=128
avrdanano.menu.appspm.64plus.bootloader.CODESIZE=128
avrdanano.menu.appspm.80plus=Above 80k (AVR128 only)
avrdanano.menu.appspm.80plus.bootloader.appspm=-DSPM_FROM_APP=160
avrdanano.menu.appspm.80plus.bootloader.CODESIZE=160
avrdanano.menu.appspm.96plus=Above 96k (AVR128 only)
avrdanano.menu.appspm.96plus.bootloader.appspm=-DSPM_FROM_APP=192
avrdanano.menu.appspm.96plus.bootloader.CODESIZE=192
avrdanano.menu.appspm.112plus=Above 112k (AVR128 only)
avrdanano.menu.appspm.112plus.bootloader.appspm=-DSPM_FROM_APP=224
avrdanano.menu.appspm.112plus.bootloader.CODESIZE=224
avrdanano.menu.appspm.120plus=Above 120k (AVR128 only)
avrdanano.menu.appspm.120plus.bootloader.appspm=-DSPM_FROM_APP=240
avrdanano.menu.appspm.120plus.bootloader.CODESIZE=240

#----------------------------------------#
# WDT MODE                               #
#________________________________________#
avrdanano.menu.WDTtimeout.disabled=Disabled (recommended)
avrdanano.menu.WDTtimeout.8seconds=Window remains open for 8 Seconds
avrdanano.menu.WDTtimeout.4seconds=Window remains open for 4 Seconds
avrdanano.menu.WDTtimeout.2seconds=Window remains open for 2 Seconds
avrdanano.menu.WDTtimeout.1second=Window remains open for 1 Second
avrdanano.menu.WDTtimeout.500msec=Window remains open for 500 milliseconds
avrdanano.menu.WDTtimeout.250msec=Window remains open for 250 milliseconds
avrdanano.menu.WDTtimeout.125msec=Window remains open for 125 milliseconds
avrdanano.menu.WDTtimeout.63msec=Window remains open for 62.5 milliseconds
avrdanano.menu.WDTwindow.disabled=No delay before window "opens"
avrdanano.menu.WDTwindow.8seconds=8 Second before window "opens"
avrdanano.menu.WDTwindow.4seconds=4 Second before window "opens"
avrdanano.menu.WDTwindow.2seconds=2 Second before window "opens"
avrdanano.menu.WDTwindow.1second=1 Second before window "opens"
avrdanano.menu.WDTwindow.500msec=500 millisecond before window "opens"
avrdanano.menu.WDTwindow.250msec=250 millisecond before window "opens"
avrdanano.menu.WDTwindow.125msec=125 millisecond before window "opens"
avrdanano.menu.WDTwindow.63msec=62.5 millisecond before window "opens"
avrdanano.menu.WDTtimeout.disabled.bootloader.wdttimeoutbits=0000
avrdanano.menu.WDTtimeout.8seconds.bootloader.wdttimeoutbits=1011
avrdanano.menu.WDTtimeout.4seconds.bootloader.wdttimeoutbits=1010
avrdanano.menu.WDTtimeout.2seconds.bootloader.wdttimeoutbits=1001
avrdanano.menu.WDTtimeout.1second.bootloader.wdttimeoutbits=1000
avrdanano.menu.WDTtimeout.500msec.bootloader.wdttimeoutbits=0111
avrdanano.menu.WDTtimeout.250msec.bootloader.wdttimeoutbits=0110
avrdanano.menu.WDTtimeout.125msec.bootloader.wdttimeoutbits=0101
avrdanano.menu.WDTtimeout.63msec.bootloader.wdttimeoutbits=0100
avrdanano.menu.WDTwindow.disabled.bootloader.wdtwindowbits=0000
avrdanano.menu.WDTwindow.8seconds.bootloader.wdtwindowbits=1011
avrdanano.menu.WDTwindow.4seconds.bootloader.wdtwindowbits=1010
avrdanano.menu.WDTwindow.2seconds.bootloader.wdtwindowbits=1001
avrdanano.menu.WDTwindow.1second.bootloader.wdtwindowbits=1000
avrdanano.menu.WDTwindow.500msec.bootloader.wdtwindowbits=0111
avrdanano.menu.WDTwindow.250msec.bootloader.wdtwindowbits=0110
avrdanano.menu.WDTwindow.125msec.bootloader.wdtwindowbits=0101
avrdanano.menu.WDTwindow.63msec.bootloader.wdtwindowbits=0100
